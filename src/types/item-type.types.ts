export interface ItemOption {
  id: string;
  name: string; // "Shot", "Bi√®re", "Vin", "Cocktail"
  emoji: string; // "ü•É", "üç∫", "üç∑", "üçπ"
  points: number; // 100, 50, 75, 120
  color?: string; // Display color
}

export interface ItemType {
  id?: string; // Firebase document ID
  name: string;
  description?: string;
  options: ItemOption[];
  isGeneric?: boolean; // yes if not generated by user
  createdBy?: string; // user UID if not created by us
  createdAt: string; // ISO string
  updatedAt?: string; // ISO string
}

export interface UserItem {
  id: string; // ID of item
  optionId: string; // Reference tp ItemOption.id
  createdAt: string; // ISO string
  comment?: string;
  isRemoved?: boolean; // For removal
  count?: number; // Number of item
}

export interface UserRoomItems {
  id?: string; // Firebase document ID
  userId: string;
  roomId: string;
  items: UserItem[]; // User list
  createdAt: string; // ISO string when joining room
  updatedAt?: string; // ISO string
}

// Aggregated item display
export interface AggregatedItem {
  optionId: string;
  option: ItemOption;
  count: number; // Total number
  totalPoints: number;
}

export interface CreateItemTypeForm {
  name: string;
  description: string;
  options: Omit<ItemOption, "id">[];
}

export interface CreateItemOptionForm {
  name: string;
  emoji: string;
  points: number;
  color?: string;
}
